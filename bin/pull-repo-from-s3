#!/bin/sh
#
# Pull the repository files from S3
#
# Usage: bin/pull-repo-from-s3
#
# This will pull the repository files from the S3 bucket. This is useful
# because we want to make delta builds.
#
# Environment:
#   (Optional) AWS_PROFILE => Set which AWS profile is going to be used to
#     perform the S3 operations. This is recommended over using the access keys
#     directly.
#   (Optional) AWS_ACCESS_KEY_ID => If not using AWS profiles, this should
#     point to the key created by IAM.
#   (Optional) AWS_SECRET_ACCESS_KEY => If not using AWS profiles, this should
#     be the access secret of your key.
#   (Required) AWS_S3_PACKAGES_BUCKET_NAME => The bucket name where the
#     packages are stored.
#   (Required) REPO_NAME => The name of the repository file that you want to
#     add your built packages to.
#
# Informational:
#   This script will look for a file named sign-key-for-$REPO_NAME.asc at the
#   top level of the S3 bucket. Ensure that this file is there.

main() {
  # cd to root path
  cd "$(dirname "$0")/.." || exit

  # shellcheck disable=2039,1091
  source lib/messages.sh

  # Checks presence of required params
  validate_env

  # Get the repo from the S3
  download_db_files "output/db"
}

# Checks the environment for the required variables and then stops if they are
# not found.
validate_env() {
  if [ -z "$AWS_S3_PACKAGES_BUCKET_NAME" ]; then
    error "Please, set the S3 Bucket using the variable \$AWS_S3_PACKAGES_BUCKET_NAME"
    exit 1
  fi

  if [ -z "$REPO_NAME" ]; then
    error "Please, set the name of your repository with the var \$REPO_NAME"
    exit 1
  fi
}

# Download all the DB files onto the specified folder
#
# Parameters
#   1 - The path you want to download the DB files to.
download_db_files() {
  dir=$1
  files="$REPO_NAME.db $REPO_NAME.db.tar.gz $REPO_NAME.files $REPO_NAME.files.tar.gz"

  success "Pulling the repo from S3 bucket"
  for file in $files; do
    aws s3 cp "s3://$AWS_S3_PACKAGES_BUCKET_NAME/$file" \
      "$dir/$file" > /dev/null 2>&1; status=$?

    if [ "$status" != 0 ]; then
      error "Failed to pull the repo file '$file' from the S3!"
      exit 1
    fi
  done

  info "Success!"
}

main
